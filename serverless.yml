service: barksh-module-authentication
frameworkVersion: "3"

provider:
  name: aws
  stage: prod
  region: us-east-1
  runtime: nodejs18.x
  memorySize: 256
  timeout: 10
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    AUTHENTICATION_MONGO_DB: ${env:AUTHENTICATION_MONGO_DB}
    AUTHENTICATION_SECRET_KEY: ${env:AUTHENTICATION_SECRET_KEY}
    AUTHENTICATION_SELF_DOMAIN: ${env:AUTHENTICATION_SELF_DOMAIN}

plugins:
  - serverless-offline
  - serverless-plugin-typescript

custom:
  serverlessPluginTypescript:
    tsConfigFileLocation: "./typescript/tsconfig.build.json"
  serverless-offline:
    useChildProcesses: true
    httpPort: 4000

functions:
  AccountCreatePost:
    handler: src/handlers/v1/account/post-register.accountPostRegisterHandler
    events:
      - httpApi:
          path: /v1/account/register
          method: post
  AuthenticationInquiryPost:
    handler: src/handlers/v1/authentication/post-inquiry.authenticationPostInquiryHandler
    events:
      - httpApi:
          path: /v1/authentication/inquiry
          method: post
  AuthenticationRealizePost:
    handler: src/handlers/v1/authentication/post-realize.authenticationPostRealizeHandler
    events:
      - httpApi:
          path: /v1/authentication/realize
          method: post
  AuthenticationRedeemPost:
    handler: src/handlers/v1/authentication/post-redeem.authenticationPostRedeemHandler
    events:
      - httpApi:
          path: /v1/authentication/redeem
          method: post
  AuthenticationRefreshPost:
    handler: src/handlers/v1/authentication/post-refresh.authenticationPostRefreshHandler
    events:
      - httpApi:
          path: /v1/authentication/refresh
          method: post
  SecretPublicKeyPost:
    handler: src/handlers/v1/secret/post-public-key-fetch.secretPostPublicKeyFetchHandler
    events:
      - httpApi:
          path: /v1/secret/public-key/fetch
          method: post
